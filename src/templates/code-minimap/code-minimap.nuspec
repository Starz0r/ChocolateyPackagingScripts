<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>code-minimap</id>
    <version>$version</version>
    <packageSourceUrl>https://github.com/Starz0r/ChocolateyPackagingScripts</packageSourceUrl>
    <owners>Starz0r</owners>
    <title>Code Minimap</title>
    <authors>Wenxuan Zhang</authors>
    <projectUrl>https://github.com/wfxr/code-minimap</projectUrl>
    <copyright>Copyright Â© 2020-2022 Wenxuan Zhang</copyright>
    <licenseUrl>https://github.com/wfxr/code-minimap/blob/$tag/LICENSE-MIT</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/wfxr/code-minimap/tree/$tag</projectSourceUrl>
    <bugTrackerUrl>https://github.com/wfxr/code-minimap/issues</bugTrackerUrl>
    <tags>code-minimap vim cli terminal tool minimap thumbnail code programming nvim neovim foss</tags>
    <summary>ðŸ›° A high performance code minimap render. </summary>
    <description>[![CICD](https://github.com/wfxr/code-minimap/workflows/CICD/badge.svg)](https://github.com/wfxr/code-minimap/actions?query=workflow%3ACICD)
[![License](https://img.shields.io/crates/l/code-minimap.svg)](https://crates.io/crates/code-minimap)
[![Version](https://img.shields.io/crates/v/code-minimap.svg?colorB=319e8c)](https://crates.io/crates/code-minimap)
[![Platforms](https://img.shields.io/badge/platform-%20Linux%20|%20OSX%20|%20Win%20|%20ARM-orange.svg)](https://github.com/wfxr/code-minimap/releases)

This tool is for generating text minimaps at ðŸš€ speed.
You can use it to implement IDE-like minimap plugin for a terminal text editor,
[minimap.vim](https://github.com/wfxr/minimap.vim) for example.

### Features

* Small and *fast* (see [benchmarks](#benchmark) below).
* Memory efficient.
* Freely zoom.
* [Multi platforms](https://github.com/wfxr/code-minimap/releases) support.

### Usage

```
$ code-minimap src/core.rs -H 0.6 -V 0.5
â£¿â£¿â£¿â£¿â£¿â ¿â ›â “â ’â ’â ‚
â£‰â£¿â£¿â£¿â£Ÿâ£›â£›â£›â ’â ’â ‚
â €â ‰â£¿â£¿â£¿â£¿â ­â ­â ­â ­â ¤â ¤â ¤â ¤â ¤
â €â ‰â ›â »â¢¿â£¿â£¿â£¿â£¿â£¶â£¶â£¶â£’â£’â£’â£’â£’â£’â£€â£€â£€â£€â£€â£€â£€â£€â£€â¡€
â €â£€â£¶â£¾â£¿â£¿â£¿â£¿â£­â£­â£­â£¤â£¤â£¤â£¤â£¤â ¤â ¤â ¤â ¤â ¤
â£¿â£¿â£¿â£¶â¡’â ’â ’â ’
â£¿â£¿â£¶â£¶â£¶â£¶â£¶â£¶â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£„
â£­â£­â£­â£­â ­â ­â ­â ­â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰â ‰
â£¿â£¿â£¿â£¿â£§â£¤â£¤â£¤â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â¡€
â£›â£¿â£¿â£¿â£Ÿâ£›â£’â£’â ‚
â£€â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£‹â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â£€â¡€
â €â£¤â£­â£½â£¿â£·â£¶â£¶â£¶â ¶â ¶â ¶â ¶â ¶â ¶â ¶â ¶â ¶â ¶â ¶â ¶â ’â ’â ’â ’â ’
â €â ¶â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ¿â ›â “â ’â ’â ’â ’â ’
â£‰â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â£›â¡›â ›â ›â ›â ›
â ’â£¶â£¶â£¶â£¶â£¶â£¶â£¶â£¶â£¶â£¶â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â£¤â¡„
â €â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â¡‡
â „â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ›â ƒ
```

Run `code-minimap --help` to view detailed usage.

### Benchmark

- [src/core.rs](https://github.com/wfxr/code-minimap/blob/v0.3.0/src/core.rs):

```
$ hyperfine -w 10 &apos;code-minimap src/core.rs&apos;
Benchmark #1: code-minimap src/core.rs
  Time (mean Â± Ïƒ):       0.2 ms Â±   0.1 ms    [User: 0.4 ms, System: 0.3 ms]
  Range (min â€¦ max):     0.2 ms â€¦   1.1 ms    1560 runs
```
**79** lines, **4K** size, **0.2ms**.

---------------------------------

- [all rust code from rust-1.46.0](https://github.com/rust-lang/rust/archive/1.46.0.tar.gz):

```
$ fd -t f -e rs -x cat &quot;{}&quot; &gt;&gt; /tmp/all-in-one.rs
$ hyperfine -w 10 &apos;code-minimap /tmp/all-in-one.rs&apos;
Benchmark #1: code-minimap /tmp/all-in-one.rs
  Time (mean Â± Ïƒ):     322.7 ms Â±   4.5 ms    [User: 298.7 ms, System: 23.8 ms]
  Range (min â€¦ max):   318.5 ms â€¦ 334.1 ms    10 runs
```
**1,153,225** lines, **37M** size, **323ms**.

---------------------------------

- [huge random file]():
```
$ base64 /dev/urandom | head -10000000 &gt; huge.txt
$ hyperfine -w 1 &apos;code-minimap huge.txt&apos;
Benchmark #1: code-minimap huge.txt
  Time (mean Â± Ïƒ):      2.941 s Â±  0.034 s    [User: 2.618 s, System: 0.321 s]
  Range (min â€¦ max):    2.919 s â€¦  3.028 s    10 runs

```
 **10,000,000** lines, **735M** size, **2.9s**.

---------------------------------

*Test environment:*

```
Binary version: 0.3.0
OS: Arch Linux x86_64
Kernel: 5.8.10-arch1-1
CPU: Intel i9-9900K (16) @ 5.000GHz
```

### Related Project

[minimap.vim](https://github.com/wfxr/minimap.vim): Blazing fast minimap for vim.</description>
    <releaseNotes>$notes</releaseNotes>
    <dependencies>
		<dependency id="vcredist140" version="14.20.27508.1" />
    </dependencies>
  </metadata>
</package>